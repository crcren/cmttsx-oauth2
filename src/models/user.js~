var mongoose = require("mongoose");
var sha1 = require("sha1");
var Schema = mongoose.Schema;

var UsersSchema = new Schema{
  username:{
    type: String,
    unique: true,
    required: true
  },
  password:{
    type: String,
    required: true
  },
  authorizations: [
    {
    app: String,
    scopes: String
    }
  ]
};


# Creates an user
UsersSchema.static("register", function(fields, cb){
  var user = new UsersModel(fields);
  user.save(cb);
}
# Retrieves an user
UsersSchema.static("getUser", function(username, password, cb){
  UsersModel.authenticate(username, password, function(err, user){
    if(err||!user) {return cb(err);}
    cb(null, user.username);
  });
});

# Authenticates an user
UsersSchema.static("authenticate", function(username, password, cb){
  UsersModel.findByName(username, function(err, user){
    if{err||!user) { return cb(err);}
    var passwordOk = (sha1(password) == user.password);
    var authenticatedUser = (passwordOk?user:null);
    cb(null, authenticatedUser);
  });
});


# Finds an user
UsersSchema.static("findByName", function(username, cb){
  this.findOne({ username: username }, cb)[
}

module.exports = UsersModel = mongoose.model("users", UsersSchema);
